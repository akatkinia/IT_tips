# Вам нужно посчитать сумму элементов двумерного квадратного (NxN) списка, которые расположены на главной диагонали.
# Под главной диагональю матрицы подразумевается диагональ, проведённая из левого верхнего угла в правый нижний.
#     Отличительной особенностью элементов, расположенных на главной диагонали, является то, что у них номер строки совпадает с номером столбца. У всех остальных элементов матрицы номера строки и столбца различаются
# Программа сперва принимает на вход число N (N<=15) - количество строк и столбцов в списке, а затем в N строках записаны элементы списка.


n = int(input())   	# Кол-во строк и столбцов матрицы

a = []				# Переменная для хранения матрицы (списка со вложенными списками)
s = 0				# Переменная для суммы			

for i in range(n):
    b = list(map(int, input().split()))    # Промежуточный список для временного хранения элементов строки матрицы перед их добавлением в список a
    a.append(b)    			               # Добавление списков в матрицу

for i in range(n):    		               # Обход строк матрицы
    for j in range(n):    	               # Обход столбцов матрицы
        if i == j:    		               # Если текущий элемент находится на главной диагонале 
            s += a[i][j]                   # Суммирование элемента

print(s)


# Ещё решение:
n = int(input())
s = 0

for i in range(n):
    s += int(input().split()[i])
print(s)