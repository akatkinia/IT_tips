# Задача.
# Необходимо определить максимальную длину последовательности из подряд идущих единиц в бинарном векторе vector.

vector1 = [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1]               # 5
vector2 = [1, 1, 1, 1, 1]                                    # 5
vector3 = [0, 0, 0, 0, 1]                                    # 1
vector4 = [0, 0, 0, 0, 0]                                    # 0
vector5 = []                                                 # 0
vector6 = [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1]               # 5
vector7 = [1, 1, 0, 1, 1, 1]                                 # 3

def find_best(arr):
    current = 0
    best = 0
    for i in arr:
        if i > 0:
            current += 1
            best = max(best, current)
        else:
            current = 0
    return best
            
print(find_best(vector6))


# аналогичная функция:

def find_max(arr, target, max_units=0, current=0):
    for i in range(len(arr)):
        if arr[i] == target:
            current += 1
            max_units = max(max_units, current)
        else:
            current = 0
    return max_units


print(find_max(vector6, 1))


# Объяснение
# 1. Функция find_max принимает на вход массив с данными и искомое значение.
# 2. Функция имеет дополнительные аргументы со стартовым значением. max_units - максимальное число в последовательности, current - счётчик, который обнуляется при несоблюдении условия из п.4
# 3. Количество итераций цикла равняется количество элементов массива.
# 4. В каждой итерации происходит сравнение элемента массива по его индексу с искомым значением.
# 5. Если условие удовлетворяется значение счётчика прибавляется на единицу. Затем ищем наибольшее значение среди max_units и current и перезаписываем его в переменную max_units.
# 6. Если условие не удовлетворяется, счётчик сбрасывается
# 7. В результате функция выводит максимальную длину последовательности искомого элемента
