# # Алгоритм переворота строки на Python позволяет инвертировать порядок символов в строке, тем самым получая строку, которая читается задом наперед. Вот описание этого алгоритма:
#     Создается пустая строка reversed_str, которая будет содержать перевернутую версию исходной строки.
#     Алгоритм начинает итерацию по символам исходной строки input_str с конца к началу. Для этого используется срез [::-1], который возвращает строку в обратном порядке.
#     На каждой итерации символ из исходной строки добавляется в начало reversed_str. Это позволяет формировать перевернутую версию строки, начиная с последнего символа и заканчивая первым.
#     После завершения итерации, reversed_str содержит перевернутую версию исходной строки.
#     Возвращается reversed_str в качестве результата.

# Пример использования этого алгоритма показывает, как можно легко перевернуть строку, получив обратную ей версию.


def reverse_string(input_str):
    # Инициализируем пустую строку для хранения перевернутой строки
    reversed_str = ""
    
    # Итерируемся по символам входной строки с конца к началу
    # и добавляем каждый символ в начало перевернутой строки
    for char in input_str[::-1]:
        reversed_str += char
    
    return reversed_str

# Пример использования
input_str = "Hello, World!"
reversed_str = reverse_string(input_str)
print("Исходная строка:", input_str)
print("Перевернутая строка:", reversed_str)

# В этом коде мы создаем новую пустую строку reversed_str, а затем итерируемся по символам исходной строки input_str с конца к началу и добавляем каждый символ в начало reversed_str. Как результат, reversed_str будет содержать перевернутую версию исходной строки.

# но проще сделать в одну строку
print(input_str[::-1])
