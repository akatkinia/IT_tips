# Брейн наснимал очень много красочных фотографий на цветную и черно-белую пленки. Затем проявил и перевел их в цифровой вид. Но вот незадача! Теперь цветные и черно-белые фотографии лежат в одной папке, и, чтобы их рассортировать, нужно потратить не один час!
# Так как Брейн теперь фотограф, а не программист, он просит вас помочь ему для одной фотографии определить, цветная она или черно-белая.
# Фотография представляет собой матрицу размера n × m, в каждой ячейке которой хранится символ, обозначающий цвет соответствующего пикселя. Всего существует 6 цветов:
#     'C' (cyan) — голубой
#     'M' (magenta) — пурпурный
#     'Y' (yellow) — желтый
#     'W' (white) — белый
#     'G' (grey) — серый
#     'B' (black) — черный
# Фотографию можно считать черно-белой, если в ней есть только белый, серый или черный цвет. Если же присутствует хоть один пиксель голубого, пурпурного или желтого цвета, она цветная.

# Входные данные
# В первой строке содержится два целых числа n и m (1 ≤ n, m ≤ 100) — количество строк и столбцов в матрице пикселей фотографии соответственно.
# Далее следуют n строк, описывающих строки матрицы. Каждая из них состоит из m разделенных пробелом символов, описывающих цвета пикселей в строке. Каждый из символов в строке является одним из символов 'C', 'M', 'Y', 'W', 'G' или 'B'.

# Выходные данные
# В единственной строчке выведите «#Black&White» (без кавычек), если фотография черно-белая, и «#Color» (без кавычек), если цветная.

n, m = map(int, input().split())
photo = [ list(map(str, input().split())) for _ in range(n)  ]

color_flag = 0

for i in photo:
    for j in i:
        if j == 'C' or j == 'M' or j == 'Y':
            color_flag += 1

if color_flag > 0:
    print('#Color')
else:
    print('#Black&White')

# Ещё вариант
n, m = map(int, input().split())
a = [input() for i in range(n)]
c = '#Black&White'
for i in range(n):
    for j in range(m):
        if a[i][j] == 'C' or a[i][j] == 'M' or a[i][j] =='Y':
            c = '#Color'
print(c)