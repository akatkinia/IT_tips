# Задача
# Отсортировать список алгоритмом bubble sort (пузырьком)

data = [5, 7, 4, 3, 8, 2]
count = 0

for j in range(len(data) - 1):     # Обходов нужно сделать на 1 меньше чем количество элементов (после каждого обхода "всплывает 1 пузырёк"), последний и так будет самым минимальным
    for i in range(len(data) - 1 - j): # при bubble sort мы идём по элементам списка и брать его соседа справа. Т.к. у последнего элемента нет соседа справа, мы обходим всех кроме него ```len(data)-1```
        if data[i] > data[i + 1]:
            count += 1          # количество действий перемещения элемента
            data[i], data[i + 1] = data[i + 1], data[i]
print(data)
print(f"Количество действий перемещения элементов: {count}")

# Объяснение
# 1. Внутренний цикл делает первый обход по элементам списка и в случае если он больше соседа справа, переходит на его место. Количество итераций ```len(data)-1```, так как у последнего элемента нет соседа справа.
# 2. Внешний цикл нужен для того чтобы сделать нужное количество обходов - их нужно сделать на 1 меньше чем количество элементов (после каждого обхода "всплывает 1 пузырёк"), а последний (всплытие происходит справа налево) и так будет самым минимальным.



# Из курса. Нужно вывести в виде строки через пробел:

n = int(input())
unsorted = list(map(int, input().split()))
count = 0

for j in range(n - 1):
    for i in range(n - 1 - j):
        if unsorted[i] > unsorted[i + 1]:
            count += 1
            unsorted[i], unsorted[i + 1] = unsorted[i + 1], unsorted[i]

sorted_str = ' '.join(map(str, unsorted))
print(sorted_str)
print(count)    