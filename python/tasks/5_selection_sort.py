# Сортировка выборкой (Selection Sort) - простой алгоритм сортировки, который находит минимальный элемент в списке и перемещает его на начало списка. Затем алгоритм повторяется для оставшихся элементов, находя следующий минимальный элемент и перемещая его на следующую позицию, и так далее. 



def selection(data):
    print("До сортировки:", data)
    for i in range(len(data)):
        lowest = i                                    # Индекс наименьшего элемента в неотсортированной части списка
        
        # Ищем наименьший элемент в оставшейся части списка
        for j in range(i+1, len(data)):               # Внутренний цикл, управляемый переменной j, проходит через элементы, начиная с i+1, до конца списка. j используется для поиска минимального элемента в оставшейся части списка.
            if data[j] < data[lowest]:
                lowest = j                            # Обновляем индекс наименьшего элемента - нашли элемент меньше в правом срезе
        data[i], data[lowest] = data[lowest], data[i] # Обмениваем текущий элемент с наименьшим элементом

    return f"После сортировки: {data}"

data = [5, 7, 3, 2, 1, 5, 6, 3, 4]
print(selection(data=data))


print('---')


# ещё один способ:
def selection_sort(data):
    # Начнем с первого элемента в списке
    for i in range(len(data)):
        # Предположим, что текущий элемент - минимальный
        min_index = i
        
        # Пройдем по оставшейся части списка для поиска элемента, меньшего текущего минимального
        for j in range(i + 1, len(data)):
            # Если находим элемент, меньший текущего минимального, обновляем min_index
            if data[j] < data[min_index]:
                min_index = j
                
        # Поменяем местами текущий элемент и элемент с минимальным значением
        data[i], data[min_index] = data[min_index], data[i]

data = [5, 7, 3, 2, 1, 5, 6, 3, 4]
selection_sort(data)
print("Отсортированный список:", data)
