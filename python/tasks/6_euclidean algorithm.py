# Алгоритм Евклида - это алгоритм для нахождения наибольшего общего делителя (НОД) двух чисел. Он основан на простой итеративной процедуре деления с остатком и работает так:
#     Начните с двух чисел, a и b, где a больше или равно b.
#     Пока b не станет равным нулю, выполняйте следующие действия:
#         Вычислите остаток от деления a на b и сохраните его в a.
#         Обновите значение b на остаток.
#     Когда b станет равным нулю, a будет содержать наибольший общий делитель (НОД) исходных чисел.

def euclidean_gcd(a, b):
    while b:
        # Вычисляем остаток от деления a на b
        remainder = a % b
        
        # Обновляем a и b: a принимает значение b, а b принимает значение остатка
        a, b = b, remainder
    
    # Когда b становится равным нулю, a содержит НОД и возвращаем его
    return a

num1 = 48
num2 = 18
gcd = euclidean_gcd(num1, num2)
print(f"Наибольший общий делитель (GCD) чисел {num1} и {num2} равен {gcd}")

print('---')

####################### Ещё пример
# Также алгоритм известен как алгоритм нахождения наибольшего общего делителя (НОД).
# НОД это число без остатка, которое делит два числа и делится само без остатка на любой другой делитель данных двух чисел.
# Иными словами это самое большое число, на которое можно без остатка разделить два числа для которых мы ищем НОД.

def gcd(a, b):
    while a != 0 and b != 0:
        if a > b:
            a = a % b
        else:
            b = b % a

    return a + b

a = 48
b = 18
gcd2 = euclidean_gcd(a, b)
print(f"Наибольший общий делитель (GCD) чисел {a} и {b} равен {gcd2}")
print('---')


### Ещё пример. Есть метод gcd в модуле math
from math import gcd

print(gcd(48, 18))
print('---')


# Ещё пример
a = 48
b = 18

while a != b:
    if a > b:
        a = a - b
    else:
        b = b - a
print(a)
print('---')


# Ещё пример.
a = 18
b = 48

while b > 0:
    a, b = b, a % b
print(a)
print('---')



# Ещё пример.
a = 345
b = 555


while b > 0:
    c = a % b
    a = b
    b = c
print(a)

